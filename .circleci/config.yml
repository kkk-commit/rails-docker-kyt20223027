version: 2.1

# ジョブを事前に定義してシェアできる記法
orbs:
  ruby: circleci/ruby@1.1.2
  # heroku: circleci/heroku@1.2.3

jobs:
  # rubyのbundle installしている
  build:
    docker:
      - image: circleci/ruby:2.7
    # gitのリポジトリと同じ名前にする
    working_directory: ~/rails-docker-kyt20223027/src
    # 実際のジョブの中身
    steps:
      - checkout:
          # gitのリポジトリと同じ名前にする 
          path: ~/rails-docker-kyt20223027
        # installのコマンド、orbsが提供している 
      - ruby/install-deps

  test:
    # circleciの実行環境
    docker:
      - image: circleci/ruby:2.7
      - image: circleci/mysql:5.5
        # 環境変数はdatabase.ymlの設定に合わせる
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: app_test
          MYSQL_USER: root
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      # 自分のPCをさす
      APP_DATABASE_HOST: "127.0.0.1"
      RAILS_ENV: test
    # gitのリポジトリと同じ名前にする 
    working_directory: ~/rails-docker-kyt20223027/src
    steps:
      - checkout:
          # gitのリポジトリと同じ名前にする 
          path: ~/rails-docker-kyt20223027
      - ruby/install-deps
      - run:
          name: Database setup
          command: bundle exec rails db:migrate
      - run:
          name: test
          command: bundle exec rake test

  # deploy:
  #   docker:
  #     - image: circleci/ruby:2.7
  #   steps:
  #     - checkout
  #     - setup_remote_docker:
  #         version: 19.03.13
  #     - heroku/install
  #     - run:
  #         name: heroku login
  #         command: heroku container:login
  #     - run:
  #         name: push docker image
  #         command: heroku container:push web -a $HEROKU_APP_NAME
  #     - run:
  #         name: release docker image
  #         command: heroku container:release web -a $HEROKU_APP_NAME
  #     - run:
  #         name: database setup
  #         command: heroku run bundle exec rake db:migrate RAILS_ENV=production -a $HEROKU_APP_NAME

# ジョブの順番を定義
workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build
      - test:
      # testのためにはbuildが必要（buildが先）と定義
          requires:
            - build
      # - deploy:
      #     requires:
      #       - test
      #     filters:
      #       branches:
      #         only: main